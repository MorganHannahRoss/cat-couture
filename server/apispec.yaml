openapi: "3.0.2"
info:
  version: "1.0"
  title: Welcome to the Products API!
  description: This API allows users to handle products and reports.
servers:
  - url: "http://localhost:5001/api"
    description: Development server
paths:
  /products:
    get:
      summary: Returns a list of products with pagination
      description: Get a list of products with optional pagination.
      operationId: get-products
      tags:
        - products
      parameters:
        - name: page
          in: query
          description: The page number to retrieve (default is 1).
          required: false
          schema:
            type: integer
            minimum: 1
        - name: limit
          in: query
          description: The number of products per page (default is 10).
          required: false
          schema:
            type: integer
            minimum: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  currentPage:
                    type: integer
                  totalPages:
                    type: integer
                  itemsPerPage:
                    type: integer
                  totalItems:
                    type: integer
                required:
                  - products
                  - currentPage
                  - totalPages
                  - itemsPerPage
                  - totalItems
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /reports:
    get:
      summary: Returns a list of reports
      description: Get a list of reports.
      operationId: get-reports
      security:
        - bearerAuth: []
      tags:
        - reports
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  reports:
                    type: array
                    items:
                      $ref: "#/components/schemas/Report"
                required:
                  - reports
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: string
        categoryName:
          type: string
          nullable: true
        imageName:
          type: string
          nullable: true
        imageDescription:
          type: string
          nullable: true
        discountValue:
          type: number
          nullable: true
        discountType:
          type: string
          nullable: true
      required:
        - id
        - name
        - description
        - price
        - categoryName
        - imageName
        - imageDescription
        - discountValue
        - discountType
    Report:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        content:
          type: string
      required:
        - id
        - title
        - content
    Error:
      type: object
      properties:
        message:
          type: string
tags:
  - name: products
  - name: reports
